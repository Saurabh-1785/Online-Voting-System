# ============================================
# blockchain/.env
# ============================================

# Network Configuration
SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY
ALCHEMY_API_KEY=your_alchemy_api_key_here
INFURA_PROJECT_ID=your_infura_project_id_here

# Deployment Account
SEPOLIA_PRIVATE_KEY=your_private_key_here_without_0x_prefix

# Etherscan Verification
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# Gas Reporter (Optional)
REPORT_GAS=false
COINMARKETCAP_API_KEY=your_coinmarketcap_api_key_here

# ============================================
# frontend/.env
# ============================================

# API Configuration
VITE_API_BASE_URL=http://localhost:3000/api
VITE_ENCRYPTION_BRIDGE_URL=http://localhost:3001/api

# Blockchain Configuration
VITE_ALCHEMY_API_KEY=your_alchemy_api_key_here
VITE_SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Smart Contract Addresses (Update after deployment)
VITE_VOTER_REGISTRY_ADDRESS=0x...
VITE_ENCRYPTED_BALLOT_ADDRESS=0x...
VITE_TALLY_VALIDATOR_ADDRESS=0x...
VITE_BULLETIN_BOARD_ADDRESS=0x...

# Network
VITE_CHAIN_ID=11155111
VITE_NETWORK_NAME=sepolia

# ============================================
# backend/.env
# ============================================

# Server Configuration
PORT=3000
NODE_ENV=development

# Database
MONGODB_URI=mongodb://localhost:27017/voting_system

# Authentication
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# Blockchain Configuration
ALCHEMY_API_KEY=your_alchemy_api_key_here
SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY
SEPOLIA_PRIVATE_KEY=your_private_key_here_without_0x_prefix

# Smart Contract Addresses (Update after deployment)
VOTER_REGISTRY_ADDRESS=0x...
ENCRYPTED_BALLOT_ADDRESS=0x...
TALLY_VALIDATOR_ADDRESS=0x...
BULLETIN_BOARD_ADDRESS=0x...

# Encryption
ENCRYPTION_SECRET_KEY=your_encryption_secret_key_32_bytes_hex

# IPFS/Arweave (Optional - for off-chain storage)
IPFS_API_KEY=your_ipfs_api_key_here
IPFS_API_SECRET=your_ipfs_api_secret_here
ARWEAVE_KEY_FILE=path_to_arweave_keyfile.json

# Encryption Bridge
ENCRYPTION_BRIDGE_PORT=3001

# ============================================
# SETUP INSTRUCTIONS
# ============================================

# 1. Copy this file to each directory:
#    cp env_files blockchain/.env
#    cp env_files frontend/.env
#    cp env_files backend/.env

# 2. Get Alchemy API Key:
#    - Sign up at https://www.alchemy.com/
#    - Create a new app for Sepolia testnet
#    - Copy the API key

# 3. Get Etherscan API Key:
#    - Sign up at https://etherscan.io/
#    - Go to API Keys section
#    - Generate a new key

# 4. Generate Private Key (for deployment):
#    - Use MetaMask or create a new wallet
#    - Export the private key (NEVER share this!)
#    - Get testnet ETH from Sepolia faucet

# 5. Deploy Contracts:
#    cd blockchain
#    npm install
#    npx hardhat compile
#    npx hardhat run scripts/deploy.js --network sepolia

# 6. Copy Contract Addresses:
#    - After deployment, addresses are saved to deployments/sepolia-latest.json
#    - Update the VITE_*_ADDRESS and *_ADDRESS variables

# 7. Copy ABIs to Frontend:
#    npm run copy-abis

# 8. Start the Application:
#    # Terminal 1 - Backend
#    cd backend && npm start
#    
#    # Terminal 2 - Encryption Bridge
#    cd backend && node encryptionBridge.js
#    
#    # Terminal 3 - Frontend
#    cd frontend && npm run dev

# ============================================
# SECURITY NOTES
# ============================================

# ⚠️ NEVER commit .env files to git!
# ⚠️ Use different private keys for testnet and mainnet
# ⚠️ Rotate secrets regularly
# ⚠️ Use environment-specific configurations
# ⚠️ Enable 2FA on all accounts (Alchemy, Etherscan, etc.)

# ============================================
# GETTING TESTNET ETH
# ============================================

# Sepolia Faucets:
# 1. https://sepoliafaucet.com/
# 2. https://www.alchemy.com/faucets/ethereum-sepolia
# 3. https://faucet.quicknode.com/ethereum/sepolia

# You need ~0.5 ETH for deployment and testing

# ============================================
# PRODUCTION CONSIDERATIONS
# ============================================

# For mainnet deployment:
# - Use hardware wallet for deployment
# - Multi-sig for contract ownership
# - Professional security audit
# - Bug bounty program
# - Insurance coverage
# - Gradual rollout strategy
# - Emergency pause mechanism testing
# - Comprehensive monitoring and alerts